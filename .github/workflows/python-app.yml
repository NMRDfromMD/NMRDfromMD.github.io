name: Deploy GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout repository (with submodules)
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      # - name: Checkout submodules
      #   run: git submodule update --init --recursive

      - name: Set up Python
        uses: actions/setup-python@v2.2.1
        with:
          python-version: 3.9
          
      - name: Install sphinx
        run: |
          pip install sphinx
          pip install furo
          pip install sphinx-press-theme
          pip install sphinx-togglebutton
          pip install pygments-lammps
          pip install sphinx-favicon
          pip install sphinxcontrib.bibtex
          pip install sphinx-tabs

          pip install scipy
          pip install MDAnalysis
          pip install .
          
      - name: Build
        run: |
          cd docs/
          make clean
          make html
          
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          context: .
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/







# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10.7
      uses: actions/setup-python@v2
      with:
        python-version: "3.10.7"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install .
